# Generated by Django 4.2.2 on 2023-06-21 13:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('db', '0002_auralprofile_user_aural_profile'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChordRecognitionLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_number', models.IntegerField(unique=True)),
                ('description', models.CharField(max_length=1000)),
                ('chord_type', models.CharField(max_length=100)),
                ('shape', models.CharField(validators=[django.core.validators.int_list_validator])),
                ('inversion', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Excercises',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=1000)),
                ('difficulty', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='FrequencyRecognitionLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_number', models.IntegerField(unique=True)),
                ('description', models.CharField(max_length=1000)),
                ('frequency_thresholds', models.CharField(validators=[django.core.validators.int_list_validator])),
            ],
        ),
        migrations.CreateModel(
            name='IntervalRecognitionLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_number', models.IntegerField(unique=True)),
                ('description', models.CharField(max_length=1000)),
                ('interval', models.IntegerField(default=0)),
                ('direction', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='LevelPerformance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trials', models.IntegerField(default=0)),
                ('successes', models.IntegerField(default=0)),
                ('last_tried', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='MelodicDictationLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_number', models.IntegerField(unique=True)),
                ('description', models.CharField(max_length=1000)),
                ('length', models.IntegerField(default=0)),
                ('time_signature', models.CharField(default='4/4', max_length=100, validators=[django.core.validators.RegexValidator(code='invalid_time_signature', message='Time signature must be in the form of "X/Y".', regex='^[0-9]+/[0-9]+$')])),
                ('performance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='db.levelperformance')),
            ],
        ),
        migrations.CreateModel(
            name='ModeRecognitionLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_number', models.IntegerField(unique=True)),
                ('description', models.CharField(max_length=1000)),
                ('name', models.CharField(max_length=100)),
                ('shape', models.CharField(validators=[django.core.validators.int_list_validator])),
                ('characteristic_notes', models.CharField(validators=[django.core.validators.int_list_validator])),
                ('presentation', models.CharField(max_length=100)),
                ('performance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='db.levelperformance')),
            ],
        ),
        migrations.CreateModel(
            name='Phrases',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=300)),
                ('context', models.CharField(max_length=1000)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tune',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=1000)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='user',
            name='aural_profile',
        ),
        migrations.DeleteModel(
            name='AuralProfile',
        ),
        migrations.AddField(
            model_name='tune',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='db.user'),
        ),
        migrations.AddField(
            model_name='tune',
            name='excercise',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='db.excercises'),
        ),
        migrations.AddField(
            model_name='phrases',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='author', to='db.user'),
        ),
        migrations.AddField(
            model_name='phrases',
            name='reviewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reviewer', to='db.user'),
        ),
        migrations.AddField(
            model_name='levelperformance',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='db.user'),
        ),
        migrations.AddField(
            model_name='intervalrecognitionlevel',
            name='performance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='db.levelperformance'),
        ),
        migrations.AddField(
            model_name='frequencyrecognitionlevel',
            name='performance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='db.levelperformance'),
        ),
        migrations.AddField(
            model_name='chordrecognitionlevel',
            name='performance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='db.levelperformance'),
        ),
        migrations.AlterUniqueTogether(
            name='tune',
            unique_together={('author', 'title')},
        ),
    ]
